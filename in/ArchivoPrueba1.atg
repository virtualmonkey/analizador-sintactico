COMPILER ArchivoPrueba1

CHARACTERS 
/*
letra = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".
*/
digito = "0123456789".

TOKENS

numero = digito{digito}.
IGNORE = CHR(9) + CHR(10) + CHR(13) + CHR(20) // tabulador, salto de l√≠nea, retorno de carro y espacio en blanco


PRODUCTIONS

EstadoInicial = {Instruccion (";")}
	.

Instruccion =									(. value = 0 .)
	Expresion<ref value>						(. print(str(value)) .)
	.

Expresion <ref int resultado> =					(. resultado1, resultado2 = 0, 0 .)
	Termino <ref resultado1>
	{    "+"Termino <ref resultado2>			(. resultado1+=resultado2 .)
	   | "-"Termino <ref resultado2>			(. resultado1-=resultado2 .)
	}											(. resultado=resultado1 .)
                                				(. return resultado .)
	.

Termino <ref int resultado>=					(. resultado1, resultado2 =  0,0 .)
	Factor <ref resultado1>
	{    "*"Factor <ref resultado2>				(. resultado1*=resultado2 .)
	   | "/"Factor <ref resultado2>				(. resultado1/=resultado2 .)
	}											(. resultado=resultado1 .)
                                				(. return resultado .)
	.
	
Factor <ref int resultado> =					(. signo=1 .)
	[		"-"									(. signo = -1 .)
	]
	( 		Number <ref resultado>
		 | "(" Expresion < ref resultado> ")"
	) 											(. resultado *= signo .)
												(. return resultado .)
	.
	
Number <ref int resultado> =  numero 				(. resultado = int(self.lastToken["value"]) .)
												(. return resultado .)
	.
END ArchivoPrueba1
